Create the data reference veriables using new syntax:
using NEW( ) constructor operator.

Old syntax: 
_________
data : lv_Ref type ref to i.
create data lv_Ref.
lv_Ref->* = 1.
write lv_Ref->*.

New syntax:
_____________
data(<data_ref_var>) = NEW <data type>( ).
data(lv_Ref) = NEW i( ). --> here it is creating the data reference variable type i and it is intializing the default values of i.
                         --> beacuse we have not passed any value in constructor.

data(lv_ref) = NEW i( 1 ) --> we are initializing the value with -1.
write lv_Ref->*   " display the value as 1.

NEW( ) --> why we are calling the constructor operator? beacause it is creating the expression type of lv_ref.
       --> NEW operator also called as constructor operator.

********************************************************************
Create the class with NEW( ) key word:
 -- for gloabal class :  we have to choose the ABAP class option in Eclipse.
 -- right click on class name at definition: click on generate the construtor --> now it creates the construtor signature and implementation scalton.
 Ex: calss zcl_syn_abap definition public final create public.
      public section.
        methods : construtor
                    importing lv_Attr type any optional.
      protected section.
        data lv_attri type i.
     endclass.
     class zcl_syn_abap implementation.
       method constructor.
        lv_attr = lv_Attri.
       endmethod.
     endclass.

  now consume above calss in outside it.
old syn:
  data lr_obj type ref to zcl_syn_abap.
  create object lr_obj.

New syntax.
  data(lr_obj) = NEW  zcl_syn_abap( lv_attr =  'ram' ). -- using NEW( ), initializing the data.

***************************************************************************************************

creating the structure and table entries with #, data type and base.
Note: right click it open with --> GUI ( in Eclipse ) -- also open the GUI in eclispse
Note : in cloud we don't have the GUI options at all.

create the table: globally

@EnduserText.label : 'Employee' -->Short DESCRIPTION -- SE11
@AbapCatalog.enhancementCategory : #NOT_EXTENSIBLE --> SE11 -->Extras -->Enhancement Category - Can't be Enhanced
@AbapCatalog.tableCategory :  #TRANSPARENT  --> Table type :#TRANSPARENT
@AbapCatalog.deliveryClass : #A   --> SE11 -->Tab( Delivery and Maintenance ) Delivery Class
@AbapCatalog.dataMaintenance : #RESTRICTED -->SE11--->Tab( Delivery and Maintenance )- Databrowser/Table View Editing-Display- Maintenance Allowed with Restrictions
define table zemployee_ram{
  key client : abap.clnt;  // MANDT
  key id : char10;
      name : char20;
      age  : zage_r; --> right click create the data elt. --> further characteristics(SE11) : Additional Props
      }

SAVE and ACTIVATE .. 

Now table created.

Now fill the entries using NEW operator.

Program:
types : tt_zemp_ram type table of zemployee_ram.
types : ts_zemp_ram type ref to zemployee_ram

data(ls_data) = NEW ts_zemp_ram( client = sy-mandt id = '1' name = 'Ram' age = '30' ). // it fills the work area to ls_Data

or 

data(ls_data) = NEW #( client = sy-mandt id = '1' name = 'Ram' age = '30' ). // it fills the work area to ls_Data

cl_demo_output=>display( ls_Data->* ) // with out dereferencing --> it will display as reference
data(lt_data) = NEW tt_zemp_ram(
